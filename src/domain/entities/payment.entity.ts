import {
  IsString,
  IsNotEmpty,
  IsNumber,
  ValidateNested,
} from 'class-validator';
import { ApiProperty } from '@nestjs/swagger';

export class PaymentMethodDto {
  @IsNotEmpty()
  @IsString()
  @ApiProperty({
    example: 'CARD',
    description: 'The payment method',
  })
  type: string;
  @IsNotEmpty()
  @IsString()
  @ApiProperty({
    example: 'tok_prod_280_32326B334c47Ec49a516bf1785247ba2',
    description: 'The token generated by the payment gateway',
  })
  token: string;

  @IsNotEmpty()
  @IsNumber()
  @ApiProperty({
    example: 2,
    description: 'Installments number',
  })
  installments: number;
}

export class PaymentBodyDto {
  @IsNotEmpty()
  @ApiProperty({
    example:
      'eyJhbGciOiJIUzI1NiJ9.eyJjb250cmFjdF9pZCI6MSwicGVybWFsaW5rIjoiaHR0cHM6Ly93b21waS5jby93cC1jb250ZW50L3VwbG9hZHMvMjAxOS8wOS9URVJNSU5PUy1ZLUNPTkRJQ0lPTkVTLURFLVVTTy1VU1VBUklPUy1XT01QSS5wZGYiLCJmaWxlX2hhc2giOiIzZGNkMGM5OGU3NGFhYjk3OTdjZmY3ODExNzMxZjc3YiIsImppdCI6IjE1ODU4NDE2MTUtNDU2MTgiLCJleHAiOjE1ODU4NDUyMTV9.bwBa-RjN3euycqeXVroLWwUN1ZRY1X11I4zn1y5nMiY',
    description: 'The token generated by the payment gateway',
  })
  acceptance_token: string;

  @IsNotEmpty()
  @ApiProperty({
    example: '123456',
    description: 'The session id generated by the payment gateway',
  })
  session_id: string;

  @ValidateNested()
  @ApiProperty({
    type: PaymentMethodDto,
    description: 'The payment method',
    example: {
      type: 'CARD',
      token: 'tok_prod_280_32326B334c47Ec49a516bf1785247ba2',
      installments: 2,
    },
  })
  payment_method: PaymentMethodDto;

  @IsNotEmpty()
  @IsNumber()
  @ApiProperty({
    example: 100,
    description: 'The ID of the transaction',
  })
  transaction_id: number;
}

export class PaymentDto {
  @IsNotEmpty()
  @IsNumber()
  @ApiProperty({
    example: 100,
    description: 'The amount of the payment',
  })
  amount: number;

  @IsNotEmpty()
  @IsString()
  @ApiProperty({
    example: 'COP',
    description: 'The currency of the payment',
  })
  currency: string;

  @IsNotEmpty()
  @IsNumber()
  @ApiProperty({
    example: 100,
    description: 'The ID of the transaction',
  })
  transactionId: number;

  @IsNotEmpty()
  @IsString()
  @ApiProperty({
    example: 'APPROVED',
    description: 'The status of the payment',
  })
  status: string;

  @IsNotEmpty()
  @IsString()
  @ApiProperty({
    example: 'PAYMENT-REF-123456',
    description: 'The reference of the payment',
  })
  reference: string;

  @IsNotEmpty()
  @IsString()
  @ApiProperty({
    example: 'CARD',
    description: 'The payment method',
  })
  type: string;

  @IsNotEmpty()
  @IsNumber()
  @ApiProperty({
    example: 2,
    description: 'Installments number',
  })
  installments: number;

  @IsNotEmpty()
  @IsString()
  @ApiProperty({
    example: 'tok_prod_280_32326B334c47Ec49a516bf1785247ba2',
    description: 'The token generated by the payment gateway',
  })
  token: string;

  @IsNotEmpty()
  @IsString()
  @ApiProperty({
    example: '123456',
    description: 'The id of the transaction',
  })
  wompiTransactionId: string;
}

export class Payment {
  constructor(
    public id: number,
    public amount: number,
    public currency: string,
    public transactionId: number,
    public status: string,
    public reference: string,
  ) {}
}
